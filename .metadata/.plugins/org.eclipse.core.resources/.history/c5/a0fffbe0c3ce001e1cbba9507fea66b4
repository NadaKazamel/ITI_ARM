/*
 * GPIO.h
 *
 *  Created on: Feb 18, 2024
 *      Author: Nada
 */

#ifndef MCAL_GPIO_GPIO_H_
#define MCAL_GPIO_GPIO_H_

#include "../../LIB/Std_Types.h"

/* Base Addresses*/

#define GPIO_A			(void*)0x40020000
#define GPIO_B			(void*)0x40020400
#define GPIO_C			(void*)0x40020800
#define GPIO_D			(void*)0x40020C00
#define GPIO_E			(void*)0x40021000
#define GPIO_H			(void*)0x40021C00

/* Pin numbers */
typedef enum
{
	GPIO_WrongPin = -1,
	GPIO_Pin0,
	GPIO_Pin1,
	GPIO_Pin2,
	GPIO_Pin3,
	GPIO_Pin4,
	GPIO_Pin5,
	GPIO_Pin6,
	GPIO_Pin7,
	GPIO_Pin8,
	GPIO_Pin9,
	GPIO_Pin10,
	GPIO_Pin11,
	GPIO_Pin12,
	GPIO_Pin13,
	GPIO_Pin14,
	GPIO_Pin15,
	GPIO_NumberOfPins
}GPIO_Pins_t;

/* Configuration Options */
#define GPO_PP
#define GPO_PP_PU
#define GPO_PP_PD

#define GPO_OD
#define GPO_OD_PU
#define GPO_OD_PD

#define AF_PP
#define AF_PP_PU
#define AF_PP_PD

#define AF_OD
#define AF_OD_PU
#define AF_OD_PD

#define IP_F
#define IP_PU
#define IP_PD

/* Struct for pin configuration info */
typedef struct
{
    void* Port;
    GPIO_Pins_t Pin;
    u32   Configuration;
    u32   Speed;
}GPIO_PinConfig_t;

/* Error Possibilities */
#define NotOk		0
#define Ok			1
#define NullPointer	2
#define WrongChoice	3

u8 GPIO_InitPinConfig(GPIO_PinConfig_t *PinCfgr);

u8 GPIO_SetPinStatus();

u8 GPIO_GetPinStatus();

#endif /* MCAL_GPIO_GPIO_H_ */
